{"title":"Echarts","slug":"Echarts","date":"2020-04-09T06:59:13.000Z","updated":"2020-04-09T06:59:13.000Z","comments":true,"path":"api/articles/Echarts.json","photos":[],"link":"","excerpt":"ECharts可视化数据 [Figure] ","covers":["https://i.loli.net/2020/04/11/5I8oObFw43tAKka.gif"],"content":"<h3 id=\"ECharts可视化数据\"><a href=\"#ECharts可视化数据\" class=\"headerlink\" title=\"ECharts可视化数据\"></a>ECharts可视化数据</h3><p><img src=\"https://i.loli.net/2020/04/11/5I8oObFw43tAKka.gif\" alt=\"aaa.gif\"></p>\n<a id=\"more\"></a>\n\n<p><strong>通过html5 css3 及 echarts的官方图例组件</strong></p>\n<p><strong>ECHARTS官网：</strong> <a href=\"https://www.echartsjs.com/zh/index.html\" target=\"_blank\" rel=\"noopener\">https://www.echartsjs.com/zh/index.html</a></p>\n<p><strong>引入echarts.min.js</strong></p>\n<p><strong>通过flexible.js实现了rem自适应，有了flexible.js，我们就不必再为移动端各种设备兼容烦恼，flexible.js是如何通过rem实现自适应的呢？一起来看看</strong></p>\n<p>通过rem与px的换算，你可以把设计稿从px转到rem。再也不用为各种设备横行而担忧。</p>\n<p>rem是相对于根元素<html>，这样就意味着，我们只需要在根元素确定一个px字号，则可以来算出元素的宽高。1rem=16px(浏览器html的像素，可以设定这个基准值），假如浏览器的html设为64px，则下面的元素则1rem=64px来运算。</p>\n<p>阿里团队开源的一个库。使用flexible.js轻松搞定各种不同的移动端设备兼容自适应问题。</p>\n<hr>\n<p><strong>项目中有中国地图 所以引入china.js</strong></p>\n<h3 id=\"项目地址：-https-github-com-Zxx-ai-echarts\"><a href=\"#项目地址：-https-github-com-Zxx-ai-echarts\" class=\"headerlink\" title=\"项目地址： https://github.com/Zxx-ai/echarts\"></a>项目地址： <a href=\"https://github.com/Zxx-ai/echarts\" target=\"_blank\" rel=\"noopener\">https://github.com/Zxx-ai/echarts</a></h3>","categories":[],"tags":[{"name":"html5 css3   ECHARTS    flexible.js","slug":"html5-css3-ECHARTS-flexible-js","count":1,"path":"api/tags/html5-css3-ECHARTS-flexible-js.json"}]}