{"title":"flex","slug":"flex","date":"2020-04-10T15:18:30.000Z","updated":"2020-04-10T15:18:30.000Z","comments":true,"path":"api/articles/flex.json","photos":[],"link":"","excerpt":"导语这篇文章不是弹性布局和响应式布局的语法教程，而是小羊在学习上述两种布局时的一点心得体会，所以建议各位看官舍得浪费时间看这篇文章之前，对弹性布局和响应式布局有一定了解，如果还没有了解，我在下面一节给出我在学习时所用的学习资料，以供童鞋们借鉴；","covers":null,"content":"<h3 id=\"导语\"><a href=\"#导语\" class=\"headerlink\" title=\"导语\"></a>导语</h3><p>这篇文章不是弹性布局和响应式布局的语法教程，而是小羊在学习上述两种布局时的一点心得体会，所以建议各位看官舍得浪费时间看这篇文章之前，对弹性布局和响应式布局有一定了解，如果还没有了解，我在下面一节给出我在学习时所用的学习资料，以供童鞋们借鉴；</p>\n<a id=\"more\"></a>\n\n<h3 id=\"网页布局的一些小见解\"><a href=\"#网页布局的一些小见解\" class=\"headerlink\" title=\"网页布局的一些小见解\"></a>网页布局的一些小见解</h3><p><strong>1、古典主义：使用table元素进行布局，当时css功能特性还不是十分强大，所以用table元素（原本是制作表格的）进行布局，违背了HTML语义化规划</strong><br><strong>2、新古典主义时期：Box-Mode+Position+Float实现布局，至今仍然使用，兼容性最好；</strong><br><strong>3、现代主义时期：Felx布局+Responsive Design +grid , 随着移动互联网的高潮迭起催生了Flex和响应式布局技术，Flex比较使用与简单的线性布局，于是适应大型网站开发的grid布局又应运而生；</strong><br><strong>4、后现代主义时期：待续。。。</strong><br><strong>网页布局</strong></p>\n<h3 id=\"felx布局和响应式布局\"><a href=\"#felx布局和响应式布局\" class=\"headerlink\" title=\"felx布局和响应式布局\"></a>felx布局和响应式布局</h3><p><strong>1、弹性盒模型是核心，主轴是一切元素主方向的布局关键，交叉轴是一切元素相对于主轴的交叉方向的布局关键；</strong></p>\n<h3 id=\"【注】切记主轴不一定是水平方向，使用flex-dirction-column那么主轴就是垂直方向\"><a href=\"#【注】切记主轴不一定是水平方向，使用flex-dirction-column那么主轴就是垂直方向\" class=\"headerlink\" title=\"【注】切记主轴不一定是水平方向，使用flex-dirction:column那么主轴就是垂直方向\"></a>【注】切记主轴不一定是水平方向，使用flex-dirction:column那么主轴就是垂直方向</h3><p><strong>2、总的来看，容器6个属性，项目也6个属性，剔除简写的flex-flow和flex（初学者不建议使用简写），也就10个属性</strong><br><strong>3、和项目总体布局相justify-content和align-content具有相同的属性：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">justift-content相当于移动每一个项目的交叉轴</span><br><span class=\"line\">align-content相当于移动同在一行项目的主轴</span><br><span class=\"line\">flex-start || flex-end || center || space-between || space-around || （stretch）</span><br></pre></td></tr></table></figure>\n\n<p>**<br>align-items和align-self都是和项目在交叉轴对齐方式相关，一个是一整行，一个是单个项目；通常是容器内只有一行元素时使用其进行布局；<br>**</p>\n<p><code>flex-start || flex-end || center || baseline || stretch</code></p>\n","categories":[],"tags":[]}